{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAASF,SAASC,cAAc,mBAChCE,EAAQH,SAASC,cAAc,kBAC/BG,EAAOJ,SAASC,cAAc,iBAKpC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFI,EAAQ,WAERC,EAAO,QAAQ,G,CAmBrBd,EAAKe,iBAAiB,UAbLC,IACfA,EAAMC,iBAEJ,IAAK,IAAIC,EAAQ,EAAGA,GAASf,EAAOgB,MAAOD,IAAS,CAClD,MAAME,EAAUC,OAAOjB,EAAMe,OAASE,OAAOhB,EAAKc,OAASD,EAC3DI,YAAW,KACThB,EAAcY,EAAOd,EAAMe,OAAOI,MAAMJ,IAAYK,EAAA1B,GAAS2B,OAAOC,QAAQP,EAAM,IAC/EQ,OAAOR,IAAWK,EAAA1B,GAAS2B,OAAOG,QAAQT,EAAM,GAAG,GACrDC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst amount = document.querySelector(\"[name='amount']\");\nconst delay = document.querySelector(\"[name='delay']\");\nconst step = document.querySelector(\"[name='step']\");\n\nconst setIntervalID = null;\nlet counter = 0;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(\"Sucsess\");\n    } else {\n      reject('Error');\n    }\n  })\n}\n\n\nconst onClick = (event) => {\n  event.preventDefault();\n \n    for (let index = 1; index <= amount.value; index++) {\n      const timeout = Number(delay.value) + Number(step.value) * index;\n      setTimeout(() => {\n        createPromise(index, delay.value).then((value) => { Notiflix.Notify.success(value);})\n          .catch((value) => {Notiflix.Notify.warning(value);})\n      }, timeout)\n    }\n};\n\n\nform.addEventListener('submit', onClick);\n\n\n\n\n\n// HomeWork\n// 1. Добавити розмітку\n// 2. Добавити 'submit' addEventListener на форму\n// 3. Зловити  в події данні з форми - 'delay', 'step', 'amount'\n// 4. Використати 'amount' як кількість запуску функції 'createPromise'\n// 5. Викликати createPromise(position, delay) n разів\n// і використати index як 'position' і delay =  (delay + step * index) із форми\n\n\n// document.querySelector('.form').addEventListener('submit', (e) => {\n//   e.preventDefault();\n//   const { delay, step, amount } = e.currentTarget.elements;\n//   const delayValue = parseInt(delay.value);\n//   const stepValue = parseInt(step.value);\n//   const amountValue = parseInt(amount.value);\n\n//   const promises = [];\n\n//   for (let index = 0; index < amountValue; index++) {\n//     const delay = index * stepValue + delayValue;\n//     // викликати 'createPromise'\n//   }\n\n//   e.currentTarget.reset();\n// });\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","addEventListener","event","preventDefault","index","value","timeout","Number","setTimeout","then","$parcel$interopDefault","Notify","success","catch","warning"],"version":3,"file":"03-promises.fc824894.js.map"}